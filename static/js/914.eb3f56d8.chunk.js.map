{"version":3,"file":"static/js/914.eb3f56d8.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contact/styled.js","components/Contact/Contact.jsx","components/ContactList/styled.js","components/ContactList/ContactList.jsx","components/ContactForm/styled.js","components/ContactForm/ContactForm.jsx","components/Filter/styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => {\n  console.log('state in selector contacts', state);\n  return state.contacts.items;\n};\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilters = state => state.filter.query;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filter) => {\n    console.log('filter in selectors', filter);\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts?.data?.results.filter(({ name, phone, email }) => {\n      console.log('name, phone, email', name, phone, email);\n      return (\n        name.toLowerCase().includes(normalizedFilter) ||\n        email.toLowerCase().includes(normalizedFilter) ||\n        phone.toLowerCase().includes(normalizedFilter)\n      );\n    });\n  }\n);\n","import styled from 'styled-components';\n\nexport const Body = styled.td`\n  position: relative;\n  border-radius: ${p => p.theme.radii.medium};\n  text-align: center;\n  &:first-child {\n    padding: ${p => p.theme.space[3]}px ${p => p.theme.space[7]}px;\n    /* text-align: left; */\n  }\n`;\n\nexport const A = styled.span`\n  position: absolute;\n  top: 30%;\n  right: 1%;\n  text-align: right;\n`;\n\nexport const B = styled.span`\n  position: absolute;\n  top: 30%;\n  right: 12%;\n  text-align: right;\n`;\n\nexport const Row = styled.tr`\n  background-color: ${p => p.theme.colors.table};\n  &:nth-child(even) {\n    background-color: ${p => p.theme.colors.tableAccent};\n  }\n`;\n\nexport const Button = styled.button`\n  background: ${p => p.theme.colors.text};\n  color: ${p => p.theme.colors.white};\n  text-transform: none;\n  padding: ${p => p.theme.space[3]}px;\n  letter-spacing: 1px;\n  cursor: pointer;\n  border: none;\n  border-radius: ${p => p.theme.radii.medium};\n\n  &:hover {\n    background-color: ${p => p.theme.colors.blackAccent};\n  }\n`;\n\nexport const Copy = styled.button`\n  position: absolute;\n  top: 10%;\n  right: 1%;\n  background-color: transparent;\n  text-transform: none;\n  padding: ${p => p.theme.space[3]}px;\n  letter-spacing: 1px;\n  cursor: pointer;\n  border: none;\n  border-radius: ${p => p.theme.radii.medium};\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { Row, Body, Button, Copy } from './styled';\nimport { ImPhone } from 'react-icons/im';\nimport { MdOutlineContentCopy } from 'react-icons/md';\nimport { copyNumberToast } from 'constans/utils';\n\nexport const Contact = ({ id, name, number, email }) => {\n  const dispatch = useDispatch();\n\n  function handleDelete(id) {\n    dispatch(deleteContact(id));\n  }\n\n  function handleCopy(number) {\n    navigator.clipboard\n      .writeText(number)\n      .then(() => {\n        copyNumberToast();\n      })\n      .catch(error => {\n        console.log('Something went wrong', error);\n      });\n  }\n\n  return (\n    <>\n      <Row>\n        <Body>{name}</Body>\n        <Body>{email}</Body>\n        <Body>\n          {number}{' '}\n          <Copy type=\"button\" onClick={() => handleCopy(number)}>\n            <MdOutlineContentCopy size=\"15\" />\n          </Copy>\n        </Body>\n        <Body>\n          <Button>\n            <a href={`tel:${number}`}>\n              <ImPhone size=\"15\" />\n            </a>\n          </Button>\n        </Body>\n        <Body>\n          <Button type=\"button\" onClick={() => handleDelete(id)}>\n            Delete\n          </Button>\n        </Body>\n      </Row>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  font-family: ${p => p.theme.fonts.regular};\n  font-size: ${p => p.theme.fontSizes.m};\n  text-align: center;\n  margin: ${p => p.theme.space[0]}px auto;\n`;\n\nexport const Heading = styled.th`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  background-color: ${p => p.theme.colors.tableAccent};\n  padding: ${p => p.theme.space[5]}px ${p => p.theme.space[7]}px;\n  border-radius: ${p => p.theme.radii.medium};\n`;\n\nexport const Notification = styled.p`\n  font-size: ${p => p.theme.fontSizes.l};\n  text-align: center;\n  color: red;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport { Contact } from 'components/Contact';\n\nimport PropTypes from 'prop-types';\nimport { Table, Heading, Notification } from './styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <div>\n      {contacts?.length > 0 && !error && (\n        <Table>\n          <thead>\n            <tr>\n              <Heading>Name</Heading>\n              <Heading>Email</Heading>\n              <Heading>Phone</Heading>\n            </tr>\n          </thead>\n\n          <tbody>\n            {contacts.map(({ _id, name, phone, email }) => (\n              <Contact\n                key={_id}\n                id={_id}\n                name={name}\n                number={phone}\n                email={email}\n              />\n            ))}\n          </tbody>\n        </Table>\n      )}\n      {!isLoading && contacts?.length === 0 && (\n        <Notification>Contact not found 🤔</Notification>\n      )}\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const TextError = styled(ErrorMessage)`\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const StyledForm = styled(Form)`\n  max-width: 800px;\n  font-weight: ${p => p.theme.fontWeights.extraBold};\n  margin: ${p => p.theme.space[0]}px auto;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  font-family: ${p => p.theme.fonts.regular};\n  width: 100%;\n  border-radius: ${p => p.theme.radii.normal};\n  border: transparent;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n\n  :active {\n    transition: 0.3s all;\n    top: 2px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  line-height: ${p => p.theme.lineHeights.body};\n  text-align: left;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  margin-top: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  background: #ec5990;\n  color: ${p => p.theme.colors.white};\n  text-transform: uppercase;\n  border: ${p => p.theme.borders.none};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  letter-spacing: 2px;\n  display: block;\n  appearance: none;\n  border-radius: ${p => p.theme.radii.normal};\n  width: 100%;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  letter-spacing: 0.5rem;\n  transition: 0.3s all;\n  cursor: pointer;\n\n  :hover {\n    background: ${p => p.theme.colors.accent};\n  }\n\n  :active {\n    transition: 0.3s all;\n    top: 2px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from '../../redux/contacts/selectors';\nimport { addToast, errorToast } from 'constans/utils';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { TextError, StyledForm, Input, Label, Button } from './styled';\n\nconst schema = Yup.object({\n  name: Yup.string().required(),\n  email: Yup.string().required(),\n  phone: Yup.string().required(),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  phone: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const handleSubmit = ({ name, phone, email }, { resetForm }) => {\n    console.log('contacts ff', contacts.data.results);\n    if (contacts.data.results.some(e => e.name === name)) {\n      resetForm();\n      return errorToast();\n    }\n\n    dispatch(addContact({ name, phone, email }));\n    resetForm();\n    addToast();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <>\n        <StyledForm>\n          <Label>\n            Name\n            <Input type=\"text\" name=\"name\" placeholder=\"John\" />\n            <TextError name=\"name\" component=\"div\" />\n          </Label>\n\n          <Label>\n            Email\n            <Input type=\"email\" name=\"email\" placeholder=\"mail@example.com\" />\n            <TextError name=\"email\" component=\"div\" />\n          </Label>\n\n          <Label>\n            Phone\n            <Input type=\"tel\" name=\"phone\" placeholder=\"0504631567\" />\n            <TextError name=\"phone\" component=\"div\" />\n          </Label>\n\n          <Button type=\"sumbit\">\n            {isLoading && !error ? 'loading ...' : 'Add contact'}\n          </Button>\n        </StyledForm>\n      </>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizes.l};\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  font-family: ${p => p.theme.fonts.regular};\n  width: 100%;\n  max-width: 800px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: transparent;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  margin: ${p => p.theme.space[0]}px auto;\n  margin-top: 15px;\n\n  :active {\n    transition: 0.3s all;\n    top: 2px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filteredContacts } from '../../redux/contacts/filtersSlice';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { Input, Label } from './styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  console.log('contacts in Filter', contacts);\n\n  function changeFilter(e) {\n    dispatch(filteredContacts(e.target.value));\n  }\n\n  return (\n    <>\n      {contacts.data?.results.length > 0 && (\n        <Label>\n          Find contact\n          <Input\n            type=\"text\"\n            onChange={changeFilter}\n            placeholder=\"search by name, phone or email\"\n          />\n        </Label>\n      )}\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","console","log","contacts","items","selectError","error","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","query","_contacts$data","normalizedFilter","toLowerCase","trim","data","results","_ref","name","phone","email","includes","Body","styled","td","_templateObject","_taggedTemplateLiteral","p","theme","radii","medium","space","Row","span","_templateObject2","_templateObject3","tr","_templateObject4","colors","table","tableAccent","Button","button","_templateObject5","text","white","blackAccent","Copy","_templateObject6","Contact","id","number","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","type","onClick","navigator","clipboard","writeText","then","copyNumberToast","catch","handleCopy","MdOutlineContentCopy","size","href","concat","ImPhone","deleteContact","handleDelete","Table","fonts","regular","fontSizes","m","Heading","th","fontWeights","bold","Notification","l","ContactList","useSelector","length","map","_id","TextError","ErrorMessage","StyledForm","Form","extraBold","Input","Field","normal","Label","label","lineHeights","body","s","borders","none","accent","schema","Yup","required","initialValues","ContactForm","Formik","validationSchema","onSubmit","handleSubmit","_ref2","resetForm","some","e","errorToast","addContact","addToast","placeholder","component","input","Filter","onChange","filteredContacts","target","value","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}